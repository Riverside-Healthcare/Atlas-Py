[tool.poetry]
name = "atlas-of-information-management"
version = "0.1.0"
description = ""
authors = [
    "Paula Courville",
    "Darrel Drake",
    "Dee Anna Hillebrand",
    "Scott Manley",
    "Madeline Matz",
    "Christopher Pickering <cpickering@rhc.net>",
    "Sean Pickering <spickering@rhc.net>",
    "Dan Ryan",
    "Richard Schissler",
    "Eric Shultz"
]
license = "GPL-3.0-or-later"
readme = "readme.rst"
classifiers=[
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Flask",
    "Intended Audience :: Healthcare Industry",
    "Natural Language :: English",
]
keywords = [
    "business intelligence",
    "documentation",
    "reporting",
    "healthcare",
]
packages = [
    { include = "atlas" }
]
homepage = "https://atlas-py.herokuapp.com"
repository = "https://github.com/Riverside-Healthcare/Atlas-Py"
documentation = "https://riverside-healthcare.github.io/Atlas-Py/"


[tool.poetry.dependencies]
python = "^3.6.1"
django-mssql-backend = "^2.8.1"
django-compressor = "^2.4"
python-memcached = "^1.59"
django-htmlmin = "^0.11.0"
django-redis-sessions = "^0.6.2"
django-compression-middleware = "^0.4.1"
dataclasses = { version = "*", python = ">=3.6,<3.7" }
toml = { version = "^0.10.2", optional = true }
relative-to-now = "^0.0.8"
djangosaml2 = "^1.0.4"
django-mathfilters = "^1.0.0"
Django = "^3.2"
psycopg2-binary = "^2.8.6"
markdown-it-py = "^1.1.0"
sphinx-autoapi = { version = "^1.5.1", optional = true }
coverage = { version = "^5.3.1", optional = true }
Pygments = { version = "^2.7.3", optional = true }
pylint = { version = "^2.8.2", optional = true }
sphinx-copybutton = { version = "^0.3.1", optional = true }
Sphinx = { version = "^3.4.3", optional = true }
sphinx-book-theme = { version = "^0.0.39", optional = true }
django-debug-toolbar = { version = "^3.2", optional = true }
sphinx-inline-tabs = { version = "^2021.4.11-beta.9", python = ">=3.8,<4.0.0", optional = true }
sphinx-panels = {version = "^0.5.2", optional = true }
sphinxcontrib-youtube = {git = "https://github.com/sphinx-contrib/youtube.git", optional = true }
furo = { version = "^2021.2.28-beta.28", optional = true }
colorama = { version = "^0.4.4", optional = true }
psycopg2 = "^2.8.6"
PyYAML = "^5.4.1"
tblib = "^1.7.0"
selenium = { version = "^3.141.0", optional = true }
browserstack-local = { version = "^1.2.3", optional = true }
virtualenv = "^20.4.4"
django-libsass = "^0.8"
dj-database-url = "^0.5.0"
gunicorn = "^20.1.0"
celery = "^5.1.0"
django-celery-results = "^2.0.1"
django-celery-beat = "^2.2.0"
pysolr = {git = "https://github.com/christopherpickering/pysolr.git"}
simplejson = "^3.17.2"
django-chunked-iterator = "^0.6.1"
linkify-it-py = "^1.0.1"
mdit-py-plugins = "^0.2.8"
Pillow = "^8.3.2"
regex = "^2021.8.28"


[tool.poetry.extras]
test = ["Pygments", "toml", "coverage", "selenium", "browserstack-local"]
docs = ["Sphinx", "Pygments", "sphinx-autoapi", "sphinx-book-theme", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-panels", "sphinxcontrib-youtube", "furo", "colorama"]


[tool.poetry.dev-dependencies]
pre-commit = "^2.10.1"
django-debug-toolbar = "^3.2"
coverage = "^5.3.1"
pytest ="^6.2.1"
black = "^20.8b1"
tox = "^3.20.1"
fabric = "^2.6.0"
bs4 = "^0.0.1"
django-heroku = "^0.3.1"
whitenoise = "^5.2.0"
python-binary-memcached = "^0.30.1"
django-bmemcached = "^0.3.0"
selenium = "^3.141.0"
browserstack-local = "^1.2.3"
flower = {git = "https://github.com/mher/flower.git"}
django-doctor = "^2.4.0"
djlint = "^0.0.5"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
max_line_length = 99
include = '\.py$'
exclude = '''
    /(
        \.git
      | \.hg
      | \.mypy_cache
      | \.tox
      | \.venv
      | _build
      | buck-out
      | build
      | dist

      # The following are specific to Black, you probably don't want those.
      | blib2to3
      | tests/data

      # atlas
      | migrations
      | static
      | templates
    )/
    '''


[tool.isort]
profile = "black"
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0
# use_parentheses = true
# ensure_newline_before_comments = true
# line_length = 99
# quiet = true
sections="FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"


[tool.pylint.master]
ignore="migrations,settings,analytics,mail,index,report,models*.py,apps.py,__init__.py,apps.py,urls.py"

[tool.pylint.messages_control]
disable = "R0903, E0401, C0415, F0401"


[tool.pylint.format]
max-line-length = 99
max-module-lines=1000


[tool.pylint.basic]
good-names = "i,j,k,ex,Run,x,id,e,me,l,_,pk"
include-naming-hint="no"

[tool.djangodoctor]
directories = ["atlas"]

