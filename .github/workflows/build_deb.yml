
name: build deb

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Install deps"
        run: |
          sudo apt-get update
          sudo apt-get install dh-make devscripts dpkg-dev gzip apt-utils -y

      - name: "Load GPG Keys"
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SECRET }}

      - name: "Check out repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: "Build deb"
        run: |
          ls
          cd scripts
          rm -r "atlas-bi-$VERSION" 2>/dev/null
          cp -r "atlas-bi-<version>" "atlas-bi-$VERSION"
          cd "atlas-bi-$VERSION"
          find . -type f -name "*" -exec sed -i'' -e "s/<version>/$VERSION/g" {} +
          debuild -us -uc
          cd ..
          ls
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: "Clone PPA"
        uses: actions/checkout@v2
        with:
          repository: atlas-bi/ppa
          token: ${{ secrets.PPA_REPO_PAT }}
          path: "./ppa"

      - name: "Move deb to PPA"
        run: |
          cp scripts/*.deb ./ppa/

      - name: "Update Lists"
        run: |
          cd ./ppa

          # Packages & Packages.gz
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages

          # Release, Release.gpg & InRelease
          apt-ftparchive release . > Release
          gpg -abs -o - Release > Release.gpg
          gpg --clearsign -o - Release > InRelease

          # Commit & push
          git add -A
          git commit -m "added release $VERSION"
          git push
        env:
          VERSION: ${{ github.event.release.tag_name }}